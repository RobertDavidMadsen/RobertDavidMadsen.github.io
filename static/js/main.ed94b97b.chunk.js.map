{"version":3,"sources":["components/addButton/index.js","components/submitButton/index.js","components/Styles/index.js","components/IngInput/index.js","components/remButton/index.js","components/IngCurrent/index.js","components/nextButton/index.js","components/prevButton/index.js","components/RecipeResults/index.js","App.js","serviceWorker.js","index.js"],"names":["Button","styled","button","AddButton","onClick","SubmitButton","IngWrapper","div","ResultWrapper","IngInput","ingList","setIng","setDisplayResults","setPageNum","setKeyWord","apiCall","a","document","getElementById","value","KW","encodeURI","join","ToastsStore","success","error","id","type","box","trim","push","Set","store","RemButton","IngCurrent","inglist","multiple","size","map","theingredient","y","selectedList","options","filter","x","selected","length","newIngList","NextButton","PrevButton","RecipeResults","displayResults","pageNum","kw","useEffect","apiUpdate","console","log","results","RecipeNumber","key","href","thumbnail","src","alt","title","width","height","target","ingredients","App","useState","ing","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ed94b97b.chunk.js","sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Button = styled.button \r\n    `height: 1.3rem;\r\n    width: 2.5rem`\r\n\r\n\r\nconst AddButton = ({onClick})=>{\r\n    return <Button onClick = {onClick}>Add</Button>\r\n}\r\n\r\n\r\nexport default AddButton","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Button = styled.button \r\n    `height: 1.3rem;\r\n    width: 3.5rem`\r\n\r\n\r\nconst SubmitButton = ({onClick})=>{\r\n    return <Button onClick = {onClick}>Submit</Button>\r\n}\r\n\r\nexport default SubmitButton","import styled from \"styled-components\"\r\n\r\nexport const IngWrapper = styled.div`background-color: #282c34;  color: white;`\r\nexport const ResultWrapper = styled.div`background-color: #282c34;  color: white;`\r\n","import React from \"react\"\r\nimport axios from 'axios';\r\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\r\nimport AddButton from \"../addButton\"\r\nimport SubmitButton from \"../submitButton\"\r\nimport {IngWrapper} from \"../Styles\"\r\n\r\n\r\nconst IngInput = ({ingList, setIng, setDisplayResults, setPageNum, setKeyWord}) => {\r\n\r\n    const IngAdd = () => {\r\n        const box = document.getElementById(\"newIng\");\r\n        if(box.value.trim())\r\n        {\r\n        ingList.push(box.value.trim())  \r\n        ingList = [...new Set(ingList)]\r\n        setIng(ingList)\r\n        ToastsStore.success(\"Ingredient Added\")\r\n    }\r\n    else{ToastsStore.error(\"No Valid Ingredient to add\")}\r\n        box.value = null\r\n    }\r\n    const apiCall = async() => {\r\n        \r\n        if(document.getElementById(\"keyWord\").value)\r\n        {\r\n            setPageNum(1)\r\n            const KW = document.getElementById(\"keyWord\").value;\r\n            const URL = encodeURI(`http://www.recipepuppy.com/api/?i=${ingList.join(',')}&q=${KW}&p=1`)\r\n            ToastsStore.success(\"Gathering Recipes\")\r\n            {/*const results = await axios.get(URL);*/}\r\n            const results = {\"title\":\"Recipe Puppy\",\"version\":0.1,\"href\":\"http:\\/\\/www.recipepuppy.com\\/\",\"results\":[{\"title\":\"\\nBanana Split Dessert Recipe\\n\\n\",\"href\":\"http:\\/\\/cookeatshare.com\\/recipes\\/banana-split-dessert-11057\",\"ingredients\":\"graham cracker, banana, ice cream, walnut, fudge topping, whipped topping\",\"thumbnail\":\"http:\\/\\/img.recipepuppy.com\\/872573.jpg\"},{\"title\":\"Banana Split Shake\",\"href\":\"http:\\/\\/www.recipezaar.com\\/Banana-Split-Shake-107953\",\"ingredients\":\"banana, chocolate syrup, pineapple, ice cream, maraschino cherries, milk\",\"thumbnail\":\"\"},{\"title\":\"Banana Split Oat Bran Pancakes\",\"href\":\"http:\\/\\/allrecipes.com\\/Recipe\\/Banana-Split-Oat-Bran-Pancakes\\/Detail.aspx\",\"ingredients\":\"baking powder, banana, nonstick cooking spray, eggs, milk, oat bran, flour, salt, ice cream, strawberries, sugar\",\"thumbnail\":\"http:\\/\\/img.recipepuppy.com\\/21574.jpg\"},{\"title\":\"\\nBanana Split Squares Recipe\\n\\n\",\"href\":\"http:\\/\\/cookeatshare.com\\/recipes\\/banana-split-squares-77719\",\"ingredients\":\"banana, nuts, ice cream\",\"thumbnail\":\"\"},{\"title\":\"\\nBanana Split Moon Pie Recipe\\n\\n\",\"href\":\"http:\\/\\/cookeatshare.com\\/recipes\\/banana-split-moon-pie-77699\",\"ingredients\":\"banana, banana, chocolate syrup, ice cream\",\"thumbnail\":\"\"},{\"title\":\"Banana Split Cake\",\"href\":\"http:\\/\\/www.recipezaar.com\\/Banana-Split-Cake-253618\",\"ingredients\":\"banana, heavy cream, hot fudge, ice cream, maraschino cherries, strawberries, walnut\",\"thumbnail\":\"\"},{\"title\":\"Banana Split Pie Recipe\",\"href\":\"http:\\/\\/www.grouprecipes.com\\/61061\\/banana-split-pie.html\",\"ingredients\":\"banana, whipped topping, ice cream, fudge sauce, dulce de leche, vanilla ice cream, cookie\",\"thumbnail\":\"\"},{\"title\":\"Baked Banana Split\",\"href\":\"http:\\/\\/www.recipezaar.com\\/Baked-Banana-Split-173405\",\"ingredients\":\"banana, ice cream, chocolate, walnut\",\"thumbnail\":\"\"},{\"title\":\"Banana Split Squares Recipe\",\"href\":\"http:\\/\\/www.cdkitchen.com\\/recipes\\/recs\\/34\\/Banana_Split_Squares15396.shtml\",\"ingredients\":\"banana, chocolate ice cream, ice cream, nuts\",\"thumbnail\":\"\"},{\"title\":\"Banana Split Breakfast\",\"href\":\"http:\\/\\/www.cooks.com\\/rec\\/view\\/0,165,153178-238202,00.html\",\"ingredients\":\"banana, ice cream, nuts, rice krispies\",\"thumbnail\":\"\"}]}\r\n            setDisplayResults(results)\r\n            setKeyWord(KW)\r\n        }\r\n        else {ToastsStore.error(\"Not a valid Keyword\")\r\n        \r\n        }\r\n    }\r\nreturn ( <IngWrapper>\r\n        \r\n<div>Ingredient to Add</div>\r\n<div><input id = \"newIng\" type = \"text\"></input>&nbsp;\r\n<AddButton onClick= {IngAdd}/>\r\n</div>\r\n<br/>\r\n<div>Food Keyword</div>\r\n<div><input id = \"keyWord\" type = \"text\"></input> &nbsp;\r\n<SubmitButton onClick={apiCall}/>\r\n</div>\r\n<br/>\r\n<ToastsContainer store={ToastsStore}/>\r\n</IngWrapper>)\r\n}\r\n\r\nexport default IngInput","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Button = styled.button \r\n    `height: 1.3rem;\r\n    width: 4rem`\r\n\r\n\r\nconst RemButton = ({onClick}) =>{\r\n    return <Button onClick={onClick}>Remove</Button>\r\n}\r\n\r\n\r\nexport default RemButton","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\r\nimport RemButton from \"../remButton\"\r\nimport {IngWrapper} from \"../Styles\"\r\n\r\nconst IngCurrent = ({inglist, setIng}) => {\r\nconst ingDelete = () => {\r\n    const y = document.getElementById(\"ingreds\");\r\n    const selectedList = [...y.options].filter((x) => !x.selected);\r\n    if (!selectedList.length)\r\n    {\r\n        setIng(selectedList.map((newIngList) => {return newIngList.value}))\r\n        ToastsStore.success(\"Ingredient(s) Removed\")\r\n    }\r\n    else{\r\n        ToastsStore.success(\"No Ingredients Selected\")\r\n    }\r\n}\r\n\r\n\r\nreturn (      <IngWrapper>\r\n    <div>Current Ingredients</div>\r\n    <div><select id = \"ingreds\" multiple = \"multiple\" size = \"5\">\r\n        {inglist.map( (theingredient) => {return <option value = {theingredient}> {theingredient} </option>}\r\n        )}\r\n        </select>\r\n        </div>\r\n        <RemButton onClick= {ingDelete} >Remove</RemButton>\r\n        <br/><br/>\r\n        <ToastsContainer store={ToastsStore}/>\r\n    </IngWrapper>)\r\n}\r\n\r\n\r\n\r\nexport default IngCurrent","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Button = styled.button \r\n    `height: 1.3rem;\r\n    width: 1.5rem`\r\n\r\n\r\nconst NextButton  = ({onClick})=>{\r\n    return <Button onClick = {onClick}>{`>`}</Button>\r\n}\r\n\r\n\r\nexport default NextButton","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Button = styled.button \r\n    `height: 1.3rem;\r\n    width: 1.5rem`\r\n\r\n\r\nconst PrevButton = ({onClick})=>{\r\n    return <Button onClick = {onClick}>{`<`}</Button>\r\n}\r\n\r\n\r\nexport default PrevButton","import React, { useEffect } from \"react\"\r\nimport {ToastsStore} from 'react-toasts';\r\nimport NextButton from \"../nextButton\"\r\nimport PrevButton from \"../prevButton\"\r\nimport {ResultWrapper} from \"../Styles\"\r\nconst RecipeResults = ({displayResults, pageNum, setPageNum, kw, ingList, setDisplayResults}) => {\r\nuseEffect(() => {apiUpdate()},[pageNum])\r\n\r\n  const PrevPage = () => {\r\n    \r\n    if (pageNum <= 1)\r\n    {\r\n      ToastsStore.error(\"No Previous Pages\")\r\n    }\r\n    else \r\n    {\r\n      ToastsStore.success(\"Rewinding Page\")\r\n      setPageNum(pageNum - 1)\r\n    }\r\n  }\r\n  const NextPage = () => {\r\n    if (displayResults.results.length)\r\n    {\r\n      ToastsStore.success(\"Advancing Page\")\r\n      setPageNum(pageNum + 1)\r\n    }\r\n    else \r\n    {\r\n      ToastsStore.error(\"No Additional Pages\")\r\n    }\r\n  }\r\n\r\n  const apiUpdate = async() => {\r\n        \r\n    if(kw)\r\n    {\r\n        const URL = encodeURI(`http://www.recipepuppy.com/api/?i=${ingList.join(',')}&q=${kw}&p=${pageNum}`)\r\n        ToastsStore.success(\"Gathering Recipes\")\r\n        {/*const results = await axios.get(URL);*/}\r\n        const results = {\"title\":\"Recipe Puppy\",\"version\":0.1,\"href\":\"http:\\/\\/www.recipepuppy.com\\/\",\"results\":[]}\r\n        setDisplayResults(results)\r\n        ToastsStore.success(pageNum)\r\n\r\n    }\r\n    else {ToastsStore.error(\"Not a valid Keyword\")\r\n    \r\n    }\r\n}\r\n\r\nreturn (       <ResultWrapper>\r\n  \r\n    {console.log(displayResults)}\r\n    {displayResults?.results.map(RecipeNumber=>{\r\n      return(\r\n        <div key={RecipeNumber.href}>\r\n          {RecipeNumber.thumbnail && <img src={RecipeNumber.thumbnail} alt={RecipeNumber.title} width=\"100\" height=\"100\"></img>}\r\n          <a href={RecipeNumber.href} target=\"_blank\">{RecipeNumber.title}</a>\r\n          <br></br>\r\n          {RecipeNumber.ingredients}\r\n          \r\n          \r\n        </div>\r\n      )\r\n    })}\r\n\r\n  <PrevButton onClick={PrevPage}>Prev</PrevButton>\r\n    <NextButton onClick={NextPage}>Next</NextButton>\r\n  </ResultWrapper>)\r\n}\r\n\r\nexport default RecipeResults\r\n","import React, {useState} from 'react';\nimport IngInput from \"./components/IngInput\"\nimport IngCurrent from \"./components/IngCurrent\"\nimport RecipeResults from \"./components/RecipeResults\"\nimport './App.css';\n\nfunction App() {\n  const [ing, setIng]=useState([\"banana\", \"Ice Cream\"])\n  const [displayResults, setDisplayResults]=useState(null)\n  const [pageNum, setPageNum]=useState(1)\n  const [kw, setKeyWord]=useState(null)\n  return (\n    <div className=\"App\">\n       <IngInput className=\"App-header\" ingList={ing} setIng={setIng} setDisplayResults={setDisplayResults} setPageNum={setPageNum} setKeyWord={setKeyWord}/>\n  \n       <IngCurrent inglist={ing} setIng={setIng}/>\n\n       <RecipeResults displayResults={displayResults} pageNum={pageNum} setPageNum={setPageNum} kw={kw} ingList={ing} setDisplayResults={setDisplayResults}/>\n\n      \n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}